# Generated by Django 5.1.3 on 2025-01-01 19:07

import accounts.utilities.file_handlers
import accounts.utilities.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('address_id', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, help_text='Enter cellphone number', max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator('^(\\+27|0)[1-8][0-9]{8}$', 'RSA phone number is required')])),
                ('facebook', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_fcbk_link])),
                ('twitter', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_twitter_link])),
                ('instagram', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_insta_link])),
                ('linkedIn', models.URLField(blank=True, null=True, validators=[accounts.utilities.validators.validate_in_link])),
                ('profile_image', models.ImageField(blank=True, default='images/global/no-image-available.webp', help_text='Upload profile image', null=True, upload_to=accounts.utilities.file_handlers.handle_profile_upload)),
                ('title', models.CharField(choices=[('Mr', 'Mr'), ('Mrs', 'Mrs'), ('Ms', 'Ms'), ('Dr', 'Dr'), ('Prof', 'Prof.')], max_length=30)),
                ('maiden_name', models.CharField(blank=True, help_text='Enter your maiden name', max_length=300, null=True)),
                ('occupation', models.CharField(blank=True, default='N/A', help_text='Enter your current employment', max_length=500, null=True)),
                ('biography', models.TextField(blank=True)),
                ('professional_affiliations', models.CharField(blank=True, default='N/A', help_text='Enter your professional affiliations', max_length=700, null=True)),
                ('identity_choice', models.CharField(choices=[('ID_NUMBER', 'ID number'), ('PASSPORT', 'Passport')], default='ID_NUMBER', help_text='Select your identity document', max_length=100)),
                ('identity_number', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('verification_status', models.CharField(choices=[('NOT APPROVED', 'Not approved'), ('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('Completed', 'Completed'), ('Blocked', 'Blocked')], default='NOT APPROVED', max_length=100)),
                ('is_technical', models.BooleanField(default=False)),
                ('is_email_activated', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['-created'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='IdentityVerification',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('identity_image', models.ImageField(help_text='Please take a selfie while holding an official identification document(ID Card, Passport)', upload_to=accounts.utilities.file_handlers.handle_verification_docs_upload)),
                ('identitybook_image', models.ImageField(help_text='Please take a picture of your official identification document(ID Card, Passport, drivers license, etc)', upload_to=accounts.utilities.file_handlers.handle_verification_docs_upload)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Identity Verification',
                'verbose_name_plural': 'Identity Verifications',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=1000)),
                ('status', models.CharField(choices=[('No status', 'No status'), ('Requested Payout Details', 'Requested Payout Details'), ('Verifying Payout Details', 'Verifying Payout Details'), ('Approved Payout', 'Approved Payout'), ('Payout Declined', 'Payout Declined')], default=('No status', 'No status'), max_length=150)),
                ('cleared_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='my_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'ordering': ['-created'],
            },
        ),
    ]
